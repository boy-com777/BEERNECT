# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# # Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# # See: https://circleci.com/docs/2.0/orb-intro/
# orbs:
#   ruby: circleci/ruby@1.4.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test_backend:
    docker:
      - image: cimg/ruby:2.7.3
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: cimg/postgres:13.2

    working_directory: ~/repo

    steps:
      - checkout

      # restore gem from cache
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "~/repo/backend/Gemfile.lock" }}
            - gem-cache-v1-
          working_directory: ~/repo/backend

      # gem install
      - run:
          command: |
            gem install bundler
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
          working_directory: ~/repo/backend

      - save_cache:
          key: gem-cache-v1-{{ checksum "~/repo/backend/Gemfile.lock" }}
          paths:
            - ~/repo/backend/vendor/bundle
          working_directory: ~/repo/backend

      # Database setup
      - run:
          command: bundle exec rails db:create
          working_directory: ~/repo/backend
      - run:
          command: bundle exec rails db:migrate
          working_directory: ~/repo/backend

      - run:
          name: create directory to store test results
          command: mkdir /tmp/test-results
          working_directory: ~/repo/backend

      # run tests
      - run:
          name: RSpec
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
              || (printf "====== RETRYING...\n\n\n"; bundle exec rspec --only-failures)
          working_directory: ~/repo/backend

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /home/circleci/repo/tmp/screenshots

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # sample: # This is the name of the workflow, feel free to change it to better match your workflow.
  #   # Inside the workflow, you define the jobs you want to run.
  #   jobs:
  #     - build
  version: 2
  test:
    jobs:
      - test_backend:
          filters:
            branches:
              ignore: main
